services:

  db_auth:
      image: postgres:16
      container_name: pg_truckgo_auth
      environment:
        POSTGRES_USER: truckgodbuser
        POSTGRES_PASSWORD: 6085dc189f1444975fc8e832a2bb07c3d0816212
        POSTGRES_DB: truckgodb_auth
      ports:
        - "8880:5432"
      restart: always
      volumes:
        - postgres_auth:/var/lib/postgresql/data
      networks:
        app-network:
            ipv4_address: 172.0.0.2

  grpc-auth:
      image: golang:1.23-alpine
      container_name: grpcapi-auth
      depends_on:
        - db_auth
      working_dir: /app
      volumes:
        - ./go.mod:/app/go.mod
        - ./go.sum:/app/go.sum
        - ./auth:/app/auth
        - ./shared:/app/shared
        - ./config.yaml:/app/config.yaml
        - ./logs:/app/logs
      networks:
        app-network:
            ipv4_address: 172.0.0.3
      ports:
        - "50047:50047"
      command: ["/bin/sh", "-c", "go build -o /app/auth/server /app/auth/cmd/main.go && chmod +x /app/auth/server && /app/auth/server"]

  db_user:
      image: postgres:16
      container_name: pg_truckgo_user
      environment:
        POSTGRES_USER: truckgodbuser
        POSTGRES_PASSWORD: 6085dc189f1444975fc8e832a2bb07c3d0816212
        POSTGRES_DB: truckgodb_user
      ports:
        - "8881:5432"
      restart: always
      volumes:
        - postgres_user:/var/lib/postgresql/data
      networks:
        app-network:
            ipv4_address: 172.0.0.4

  db_order:
      image: postgres:16
      container_name: pg_truckgo_order
      environment:
        POSTGRES_USER: truckgodbuser
        POSTGRES_PASSWORD: 6085dc189f1444975fc8e832a2bb07c3d0816212
        POSTGRES_DB: truckgodb_order
      ports:
        - "8882:5432"
      restart: always
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 5s
        timeout: 5s
        retries: 5
      volumes:
        - postgres_order:/var/lib/postgresql/data
      networks:
        app-network:
            ipv4_address: 172.0.0.5

  db_payment:
      image: postgres:16
      container_name: pg_truckgo_payment
      environment:
        POSTGRES_USER: truckgodbuser
        POSTGRES_PASSWORD: 6085dc189f1444975fc8e832a2bb07c3d0816212
        POSTGRES_DB: truckgodb_payment
      ports:
        - "8883:5432"
      restart: always
      volumes:
        - postgres_payment:/var/lib/postgresql/data
      networks:
        app-network:
            ipv4_address: 172.0.0.6

  db_shipping:
      image: postgres:16
      container_name: pg_truckgo_shippings
      environment:
        POSTGRES_USER: truckgodbuser
        POSTGRES_PASSWORD: 6085dc189f1444975fc8e832a2bb07c3d0816212
        POSTGRES_DB: truckgodb_shipping
      ports:
        - "8884:5432"
      restart: always
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 5s
        timeout: 5s
        retries: 5
      volumes:
        - postgres_shipping:/var/lib/postgresql/data
      networks:
        app-network:
            ipv4_address: 172.0.0.7

  shippings:
      container_name: truckgo_shippings_server
      build:
        context: .
        dockerfile: ./DockerfileShippings
      depends_on:
        db_shipping:
          condition: service_healthy
      ports:
        - "50051:50051"
      restart: always
      networks:
        app-network:
            ipv4_address: 172.0.0.8

  orders:
      container_name: truckgo_orders_server
      build:
        context: .
        dockerfile: ./DockerfileOrders
      depends_on:
        db_order:
          condition: service_healthy
      ports:
        - "50049:50049"
      restart: always
      networks:
        app-network:
            ipv4_address: 172.0.0.9

  users:
      container_name: truckgo_users_server
      build:
        context: .
        dockerfile: ./DockerfileUsers
      depends_on:
        db_shipping:
          condition: service_healthy
      ports:
        - "50048:50048"
      restart: always
      networks:
        app-network:
            ipv4_address: 172.0.0.10


volumes:
  postgres_auth:
  postgres_user:
  postgres_order:
  postgres_payment:
  postgres_shipping:

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.0.0.0/16