syntax = "proto3";

package truckgo;

option go_package = "github.com/alexandear/truckgo/grpcapi";

service Order {
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc UpdateStatus(UpdateStatusRequest) returns (UpdateStatusResponse);
  rpc Accept(AcceptRequest) returns (AcceptResponse);
  rpc Decline(DeclineRequest) returns (DeclineResponse);
  rpc Cancel(CancelRequest) returns (CancelResponse);
  rpc Archive(ArchiveRequest) returns (ArchiveResponse);
  rpc GetOne(GetOneRequest) returns (GetOneResponse);
  rpc GetHistoryByUser(GetHistoryByUserRequest) returns (GetHistoryByUserResponse);
  rpc GetAllByUser(GetAllByUserRequest) returns (GetAllByUserResponse);
}

message CreateRequest {
  uint32 user_id = 1;
  string origin = 2;
  string destination = 3;
}

message CreateResponse {
  uint32  order_id = 1;
}

message UpdateStatusRequest {
  uint32 order_id = 1;
  int32 status = 2;
}

message UpdateStatusResponse {
}

message AcceptRequest {
  uint32 order_id = 1;
  uint32 user_id = 2;
}

message AcceptResponse {
}

message DeclineRequest {
  uint32 order_id = 1;
}

message DeclineResponse {
}

message CancelRequest {
  uint32 order_id = 1;
}

message CancelResponse {
}

message ArchiveRequest {
  uint32 order_id = 1;
}

message ArchiveResponse {
}

message GetOneRequest {
  uint32 order_id = 1;
}

message GetOneResponse {
  OrderEntity order = 1;
}

message GetHistoryByUserRequest {
  uint32 user_id = 1;
  bool is_archived = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetHistoryByUserResponse {
  repeated OrderEntity orders = 1;
  int64 total = 2;
}

message GetAllByUserRequest {
  uint32 user_id = 1;
  Status status = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetAllByUserResponse {
  repeated OrderEntity orders = 1;
  int64 total = 2;
}

message OrderEntity {
  string number = 1;
  Status status = 2;
  double price = 3;
  uint32 user_id = 4;
  uint32 driver_id = 5;
}

enum Status {
  STATUS_NEW = 0;
  STATUS_ACCEPTED = 1;
  STATUS_IN_PROGRESS = 2;
  STATUS_DONE = 3;
  STATUS_CANCELLED = 4;
}
